// <auto-generated />
using System;
using AppPrint_and_Wear.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppPrint_and_Wear.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20251015030515_Primera")]
    partial class Primera
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppPrint_and_Wear.Models.Administrador", b =>
                {
                    b.Property<int>("AdministradorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministradorId"));

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("AdministradorId");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Carrito_De_Compra", b =>
                {
                    b.Property<int>("Carrito_De_CompraId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Carrito_De_CompraId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Metodo_De_PagoId")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("Carrito_De_CompraId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.HasIndex("Metodo_De_PagoId")
                        .IsUnique();

                    b.ToTable("Carrito_De_Compras");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("Carrito_De_CompraId")
                        .HasColumnType("int");

                    b.Property<int>("Carrito_De_Compra_Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<double>("SubTotal")
                        .HasColumnType("float");

                    b.HasKey("CartItemId");

                    b.HasIndex("Carrito_De_CompraId");

                    b.HasIndex("ProductoId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"));

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Carrito_De_Compra")
                        .HasColumnType("int");

                    b.Property<string>("Contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.DetalleFactura", b =>
                {
                    b.Property<int>("DetalleFacturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleFacturaId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.HasKey("DetalleFacturaId");

                    b.HasIndex("FacturaId");

                    b.ToTable("DetalleFacturas");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Envio", b =>
                {
                    b.Property<int>("EnvioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnvioId"));

                    b.Property<int>("Carrito_De_CompraId")
                        .HasColumnType("int");

                    b.Property<string>("Direccion_De_Envio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_De_Rastreo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShippingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Tiempo_Estimado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnvioId");

                    b.HasIndex("Carrito_De_CompraId")
                        .IsUnique();

                    b.ToTable("Envios");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Factura", b =>
                {
                    b.Property<int>("FacturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FacturaId"));

                    b.Property<int>("Carrito_De_CompraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.HasKey("FacturaId");

                    b.HasIndex("Carrito_De_CompraId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Metodo_De_Pago", b =>
                {
                    b.Property<int>("Metodo_De_PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Metodo_De_PagoId"));

                    b.Property<string>("CVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Metodo_Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero_Tarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Metodo_De_PagoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Metodo_De_Pagos");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<string>("Descriccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Carrito_De_Compra", b =>
                {
                    b.HasOne("AppPrint_and_Wear.Models.Cliente", "Cliente")
                        .WithOne("Carrito")
                        .HasForeignKey("AppPrint_and_Wear.Models.Carrito_De_Compra", "ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppPrint_and_Wear.Models.Metodo_De_Pago", "Metodo_De_Pago")
                        .WithOne("Carrito_De_Compra")
                        .HasForeignKey("AppPrint_and_Wear.Models.Carrito_De_Compra", "Metodo_De_PagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Metodo_De_Pago");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.CartItem", b =>
                {
                    b.HasOne("AppPrint_and_Wear.Models.Carrito_De_Compra", "Carrito_De_Compra")
                        .WithMany("CartItems")
                        .HasForeignKey("Carrito_De_CompraId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("AppPrint_and_Wear.Models.Producto", "Productos")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrito_De_Compra");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.DetalleFactura", b =>
                {
                    b.HasOne("AppPrint_and_Wear.Models.Factura", "Factura")
                        .WithMany("Detalle_Facturas")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Envio", b =>
                {
                    b.HasOne("AppPrint_and_Wear.Models.Carrito_De_Compra", "Carrito")
                        .WithOne("Envio")
                        .HasForeignKey("AppPrint_and_Wear.Models.Envio", "Carrito_De_CompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Factura", b =>
                {
                    b.HasOne("AppPrint_and_Wear.Models.Carrito_De_Compra", "Carrito_De_Compra")
                        .WithMany()
                        .HasForeignKey("Carrito_De_CompraId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Carrito_De_Compra");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Metodo_De_Pago", b =>
                {
                    b.HasOne("AppPrint_and_Wear.Models.Cliente", "Cliente")
                        .WithMany("Metodo_De_Pagos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Carrito_De_Compra", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Envio");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Cliente", b =>
                {
                    b.Navigation("Carrito");

                    b.Navigation("Metodo_De_Pagos");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Factura", b =>
                {
                    b.Navigation("Detalle_Facturas");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Metodo_De_Pago", b =>
                {
                    b.Navigation("Carrito_De_Compra");
                });

            modelBuilder.Entity("AppPrint_and_Wear.Models.Producto", b =>
                {
                    b.Navigation("CartItems");
                });
#pragma warning restore 612, 618
        }
    }
}
